FROM php:5.6-fpm

MAINTAINER jochendev <jochenzhang94@gmail.com>

#
#--------------------------------------------------------------------------
# Mandatory Software's Installation
#--------------------------------------------------------------------------
#

#
# Installing tools and PHP extentions using "apt", "docker-php", "pecl",
#

# Install "curl", "libmemcached-dev", "libpq-dev", "libjpeg-dev",
#         "libpng12-dev", "libfreetype6-dev", "libssl-dev", "libmcrypt-dev",
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    curl \
    libmemcached-dev \
    libz-dev \
    libpq-dev \
    libjpeg-dev \
    libpng12-dev \
    libfreetype6-dev \
    libssl-dev \
    libmcrypt-dev \
  #&& pecl channel-update pecl.php.net \
  && rm -rf /var/lib/apt/lists/*

# Install the PHP mcrypt extention
RUN docker-php-ext-install mcrypt \
  # Install the PHP pdo_mysql extention
  && docker-php-ext-install pdo_mysql \
  # Install the PHP pdo_pgsql extention
  && docker-php-ext-install pdo_pgsql \
  # Install the PHP gd library
  && docker-php-ext-configure gd \
    --enable-gd-native-ttf \
    --with-jpeg-dir=/usr/lib \
    --with-freetype-dir=/usr/include/freetype2 && \
    docker-php-ext-install gd

#####################################
# Yaf EXTENSION FOR
#####################################

RUN curl -L -o /tmp/yaf-2.3.5.tgz "http://pecl.php.net/get/yaf-2.3.5.tgz" \
    && mkdir -p yaf \
    && tar -C yaf -zxvf /tmp/yaf-2.3.5.tgz --strip 1 \
    && ( \
        cd yaf \
        && phpize \
        && ./configure --with-php-config=php-config \
        && make \
        && make install \
    ) \
    && rm -r yaf \
    && rm /tmp/yaf-2.3.5.tgz \
    && docker-php-ext-enable yaf \
;fi

# Copy yaf configration
COPY ./yaf.ini /usr/local/etc/php/conf.d/yaf.ini


#--------------------------------------------------------------------------
# Optional Software's Installation
#--------------------------------------------------------------------------
#
# Optional Software's will only be installed if you set them to `true`
# in the `docker-compose.yml` before the build.
# Example:
#   - INSTALL_MEMCACHED=true
#   - ...
#

#####################################
# PHP Opcache EXTENSION
#####################################

ARG INSTALL_OPCACHE=false
RUN if [ ${INSTALL_OPCACHE} = true ]; then \
    docker-php-ext-install opcache \
;fi

# Copy opcache configration
COPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini

#####################################
# PHP xDebug EXTENSION
#####################################

ARG INSTALL_XDEBUG=false
RUN if [ ${INSTALL_XDEBUG} = true ]; then \
    # Install the xdebug extension
    curl -L -o /tmp/xdebug-2.5.5.tgz "http://pecl.php.net/get/xdebug-2.5.5.tgz" \
    && mkdir -p xdebug \
    && tar -C xdebug -zxf /tmp/xdebug-2.5.5.tgz --strip 1 \
    && ( \
        cd xdebug \
        && phpize \
        && ./configure --with-php-config=php-config \
        && make \
        && make install \
    ) \
    && rm -r xdebug \
    && rm /tmp/xdebug-2.5.5.tgz \
    && docker-php-ext-enable xdebug \
;fi

# Copy xdebug configration
COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini

#####################################
# PHP REDIS EXTENSION
#####################################

ARG INSTALL_PHPREDIS=false
RUN if [ ${INSTALL_PHPREDIS} = true ]; then \
    # Install PHP Redis Extension
    curl -L -o /tmp/phpredis.tar.gz "https://github.com/phpredis/phpredis/archive/4.0.2.tar.gz" \
    && mkdir -p phpredis \
    && tar -C phpredis -zxvf /tmp/phpredis.tar.gz --strip 1 \
    && ( \
        cd phpredis \
        && phpize \
        && ./configure \
        && make \
        && make install \
    ) \
    && rm -r phpredis \
    && rm /tmp/phpredis.tar.gz \
    && docker-php-ext-enable redis \
;fi

#####################################
# PHP Swoole EXTENSION
#####################################

ARG INSTALL_SWOOLE=false
RUN if [ ${INSTALL_SWOOLE} = true ]; then \
    # Install PHP Swoole Extension
    curl -L -o /tmp/swoole.tar.gz "https://github.com/swoole/swoole-src/archive/v1.10.4.tar.gz" \
    && mkdir -p swoole \
    && tar -C swoole -zxvf /tmp/swoole.tar.gz --strip 1 \
    && ( \
        cd swoole \
        && phpize \
        && ./configure \
        && make \
        && make install \
    ) \
    && rm -r swoole \
    && rm /tmp/swoole.tar.gz \
    && docker-php-ext-enable swoole \
;fi

#####################################
# PHP Memcached EXTENSION
#####################################

ARG INSTALL_MEMCACHED=false
RUN if [ ${INSTALL_MEMCACHED} = true ]; then \
    # Install the PHP memcached extension
    curl -L -o /tmp/memcached.tar.gz "https://github.com/php-memcached-dev/php-memcached/archive/2.2.0.tar.gz" \
    && mkdir -p memcached \
    && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \
    && ( \
        cd memcached \
        && phpize \
        && ./configure \
        && make -j$(nproc) \
        && make install \
    ) \
    && rm -r memcached \
    && rm /tmp/memcached.tar.gz \
    && docker-php-ext-enable memcached \
;fi

#
#--------------------------------------------------------------------------
# Final Touch
#--------------------------------------------------------------------------
#

RUN usermod -u 1000 www-data

WORKDIR /var/www

CMD ["php-fpm"]

EXPOSE 9000
